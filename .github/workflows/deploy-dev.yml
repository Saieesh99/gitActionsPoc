name: Deploy to Dev

on:
  push:
    branches: [ dev ]

jobs:
  deploy-dev:
    name: Deployment Dev
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_REGION : us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install boto3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init ‚úÖ
        working-directory: terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var="aws_region=us-east-1"

      - name: Show contents of terraform folder
        run: ls -la
        working-directory: terraform

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve -var="aws_region=us-east-1" -var="create_role=false" -input=false -no-color -parallelism=10

      - name: Deploy Lambda
        run: bash deploy/deploy_lambda.sh dev

      - name: Deploy Lex Bot from ZIP (if available)
        run: |
          set -e

          ZIP_FILE=$(find lex/bot1/exported/dev -name '*.zip' | head -n 1)

          if [ -f "$ZIP_FILE" ]; then
            echo "üì¶ Found ZIP: $ZIP_FILE ‚Äî using start-import"
            IMPORT_ID=$(aws lexv2-models start-import \
              --resource-specification bot=@"$ZIP_FILE" \
              --merge-strategy Overwrite \
              --region us-east-1 \
              --query importId --output text)

            echo "üÜî Import started: $IMPORT_ID"

            STATUS="InProgress"
            ATTEMPTS=0
            MAX_ATTEMPTS=20

            while [[ "$STATUS" == "InProgress" || "$STATUS" == "Waiting" ]]; do
              STATUS=$(aws lexv2-models describe-import \
                --import-id "$IMPORT_ID" \
                --region us-east-1 \
                --query 'importStatus' --output text)
              echo "‚è≥ Import status: $STATUS"

              if [[ "$STATUS" == "Completed" ]]; then
                echo "‚úÖ Import completed successfully."
                break
              elif [[ "$STATUS" == "Failed" ]]; then
                echo "‚ùå Import failed. Details:"
                aws lexv2-models describe-import --import-id "$IMPORT_ID" --region us-east-1 --output json
                exit 1
              fi

              sleep 10
              ((ATTEMPTS++))

              if [[ $ATTEMPTS -ge $MAX_ATTEMPTS ]]; then
                echo "‚ùå Timed out waiting for import to complete."
                exit 1
              fi
            done
          else
            echo "üìÅ No ZIP found ‚Äî falling back to deploy_lex.py"
            python deploy/deploy_lex.py --bot bot1 --env dev

      - name: Deploy Connect Flow
        run: python deploy/deploy_connect.py --env dev

      - name: Upload failure logs
        if: failure()
        run: echo "Check Lambda or Lex logs in CloudWatch if errors occurred."
