name: Deploy to Dev

on:
  push:
    branches: [ dev ]

jobs:
  deploy-dev:
    name: Deployment Dev
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_REGION : us-east-1
      BUCKET_NAME: voicemail-bucket-${{ github.event.inputs.env }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: üîê Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: ü™£ Deploy S3 Bucket
        run: |
          python deploy/deploy_s3_bucket.py
        env:
          BUCKET_NAME: ${{ env.BUCKET_NAME }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Terraform Init ‚úÖ
        working-directory: terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: üõ†Ô∏è Terraform Apply IAM + Lambda Shell
        working-directory: infra
        run: |
          terraform apply -auto-approve -var-file=${{ github.event.inputs.env }}.tfvars

      - name: üì¶ Deploy Lambda Function (Email Sender)
        run: |
          python deploy/deploy_lambda.py
        env:
          LAMBDA_NAME: voicemail_email_lambda
          SES_FROM: ${{ secrets.SES_FROM }}
          SES_TO: ${{ secrets.SES_TO }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var="aws_region=us-east-1" -var="environment=dev"

      - name: Show contents of terraform folder
        run: ls -la
        working-directory: terraform

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve -var="aws_region=us-east-1" -var="create_role=true" -var="environment=dev" -input=false -no-color -parallelism=10

      - name: Deploy Lambda
        run: bash deploy/deploy_lambda.sh dev

      - name: Deploy Lex Bot from ZIP (if available)
        shell: bash
        run: python deploy/import_or_create_lex_bot.py --bot bot1 --env dev

      - name: Deploy Connect Flow
        run: python deploy/deploy_connect.py --env dev

      - name: Upload failure logs
        if: failure()
        run: echo "Check Lambda or Lex logs in CloudWatch if errors occurred."
